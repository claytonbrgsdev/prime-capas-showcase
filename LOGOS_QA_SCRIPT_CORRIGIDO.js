/**
 * üîß LOGOS QA - SCRIPT CORRIGIDO (executar AP√ìS upload PNG)
 */

// AGUARDAR TEXTURAS CARREGAREM ANTES DE TESTAR
console.log('üîß LOGOS QA - SCRIPT CORRIGIDO');
console.log('‚ö†Ô∏è  IMPORTANTE: Execute AP√ìS fazer upload de PNG');

setTimeout(() => {
  console.log('\nüìä 1. Mapeando inst√¢ncias...');
  const mapping = LOGOS_QA.map();
  
  console.log('\n‚öôÔ∏è 2. Definindo prefer√™ncias de teste...');
  // Limpar prefer√™ncias anteriores primeiro
  try {
    mapping.forEach(m => {
      localStorage.removeItem('logos:pref:' + m.sig);
    });
    console.log('‚úÖ Prefer√™ncias antigas limpas');
  } catch(_) {}
  
  // Definir novas prefer√™ncias
  const prefs = {0: 1, 1: 2, 2: 0, 3: 3}; // 90¬∞,180¬∞,0¬∞,270¬∞
  const setPrefResult = LOGOS_QA.setPrefsByIdx(prefs);
  console.log('‚úÖ Novas prefer√™ncias definidas:', prefs);
  
  console.log('\nüîÑ 3. Reaplicando...');
  const reapplyResult = LOGOS_QA.reapply();
  
  // Aguardar um pouco para mudan√ßas propagarem
  setTimeout(() => {
    console.log('\nüîç 4. Verifica√ß√£o detalhada...');
    const result = LOGOS_QA.verify(0.1); // Toler√¢ncia mais relaxada: 0.1
    
    console.log('\nüìã AN√ÅLISE DETALHADA:');
    result.details.forEach((detail, i) => {
      console.log(`Inst√¢ncia ${i}:`);
      console.log(`  ‚Ä¢ Assinatura: ${detail.sig}`);
      console.log(`  ‚Ä¢ Rota√ß√£o atual: q=${detail.q_now} (${detail.q_now*90}¬∞)`);
      console.log(`  ‚Ä¢ Rota√ß√£o esperada: q=${detail.q_exp} (${detail.q_exp*90}¬∞)`);
      console.log(`  ‚Ä¢ Centro UV: dx=${detail.center_dx}, dy=${detail.center_dy}`);
      console.log(`  ‚Ä¢ Status: ${detail.ok ? '‚úÖ OK' : '‚ùå FAIL'}`);
      console.log('');
    });
    
    // Verificar estado das texturas manualmente
    console.log('\nüîç 5. Verifica√ß√£o manual das texturas:');
    const modelRoot = window.__logos_modelRoot;
    if (modelRoot) {
      const list = window.__logos_listInstances(modelRoot);
      list.forEach((item, idx) => {
        const tex = item.material?.map;
        const ub = tex?.userData?.uvBounds;
        console.log(`Inst√¢ncia ${idx}:`, {
          mesh: item.mesh.name,
          hasTexture: !!tex,
          rotation: tex?.rotation,
          uvBounds: ub ? 'presente' : 'ausente',
          center: tex?.center
        });
      });
    }
    
    if (result.fail === 0) {
      console.log('\nüéâ SISTEMA FUNCIONANDO PERFEITAMENTE!');
    } else {
      console.log('\n‚ö†Ô∏è DIAGN√ìSTICO:');
      console.log('1. Certifique-se de que fez upload de PNG');
      console.log('2. Aguarde as texturas carregarem completamente');
      console.log('3. Execute o script novamente ap√≥s upload');
    }
  }, 1000);
  
}, 2000);

console.log('‚è≥ Aguardando 2 segundos...');
console.log('üí° LEMBRE-SE: Fa√ßa upload de PNG primeiro!');
